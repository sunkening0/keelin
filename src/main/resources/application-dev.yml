   
spring:
  redis:
## 单机
    host: 127.0.0.1
    port: 6379
##
## 集群
#    cluster:
#     nodes:
#        - 218.206.4.52:6380
#        - 218.206.4.52:6381
#        - 218.206.4.52:6382
### 哨兵
#    sentinel:
#      master: mymaster
#      nodes:
#        - 218.206.4.52:26001
#        - 218.206.4.52:26002
##
    lettuce:
      pool:
### 连接池最大连接数（使用负值表示没有限制） 
        max-active: 9
### 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
### 连接池中的最大空闲连接 
        max-idle: 9
### 连接池中的最小空闲连接 
        min-idle: 0
### Redis数据库索引(默认为0) 
    database: 0
### 连接超时时间（毫秒） 
    timeout: 60000
    

            
  datasource:
    name: mysql_test
    type: com.alibaba.druid.pool.DruidDataSource
    #druid相关配置
    druid:
    #监控统计拦截的filters
      filters: stat
      driver-class-name: com.mysql.jdbc.Driver
      #基本属性
      url: jdbc:mysql://localhost:3306/blog?useUnicode=true&characterEncoding=UTF-8
      username: root
      password: 1234
      #配置初始化大小/最小/最大
      initial-size: 1
      min-idle: 1
      max-active: 20
      #获取连接等待超时时间
      max-wait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      time-between-eviction-runs-millis: 60000
      #一个连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
      pool-prepared-statements: false
      max-pool-prepared-statement-per-connection-size: 20
  
  #rabbitMQ
  rabbitmq:
    address: 127.0.0.1:5672 #配置集群 addresses:ip1:port1,ip2:port2,ip3:port3 
    username: admin
    password: admin
    virtual-host: /
    template:
      # 使用return-callback时必须设置mandatory为true
      mandatory: true
    # 消息发送到交换机确认机制,是否确认回调
    publisher-confirms: true
    # 消息发送到交换机确认机制，是否返回回调
    publisher-returns: true
    listener:
      simple:
        # 并发消费者初始化值
        concurrency: 5
        # 最大值
        max-concurrency: 10
        # 每个消费者每次监听时可拉取处理的消息数量
        prefetch: 20
        # 确认模式设置为手动签收
        acknowledge-mode: manual
        # 消费失败重试
        retry:
          enabled: true
          max-attempts: 5  # 重试次数
          initial-interval: 2000
        default-requeue-rejected: false  #这个字段一定要设置成 false 不然无法消费的数据不会进入死信队列的
    

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.wiki.model
